
#ifndef _SoundTest_SoundTest_h
#define _SoundTest_SoundTest_h


/*
 * SoundTest.h -- part of the SoundTest project.
 * Declarations for everything that was generated...
 * Mysterion the Anonymous
 * Rob  
 * 
 * Copyright (C) 2017 Mysterion the Anonymous
 * 
 * Generated by DruidBuilder [https://devicedruid.com/], 
 * as part of project "21086b99a1934041a9399b8a31cffed34of5fKqXxm",
 * aka SoundTest.
 * 
 * Druid4Arduino, Device Druid, Druid Builder, the builder 
 * code brewery and its wizards, SerialUI and supporting 
 * libraries, as well as the generated parts of this program 
 * are 
 *            Copyright (C) 2013-2018 Pat Deegan 
 * [https://psychogenic.com/ | https://flyingcarsandstuff.com/]
 * and distributed under the terms of their respective licenses.
 * See https://devicedruid.com for details.
 * 
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE 
 * PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, 
 * YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR
 * CORRECTION.
 * 
 * Keep in mind that there is no warranty and you are solely 
 * responsible for the use of all these cool tools.
 * 
 * Play safe, have fun.
 * 
 */



/* we need the SerialUI lib */
#include <SerialUIv3.h>


/* MySUI
 * Our SerialUI Instance, through which we can send/receive
 * data from users.
 */ 
extern SUI::SerialUI MySUI;









/* ********* callbacks and validation functions ********* */



/* *** Main Menu *** */
namespace MainMenu {

void doBuzzerTest();

void SetTimeChanged();

void StartTestChanged();

} /* namespace MainMenu */





/*
 * The container for MyInputs, which
 * holds all the variables for the various inputs.
 */
typedef struct MyInputsContainerStruct {
	
	SerialUI::Menu::Item::Request::Time SetTime;
	SerialUI::Menu::Item::Request::Toggle StartTest;
	// constructor to set sane startup vals
	MyInputsContainerStruct() : 
		SetTime(16 /*hour*/, 30 /*min*/, 59 /*sec*/,SUI_STR("Set Time"),NULL,MainMenu::SetTimeChanged),
		StartTest(false,SUI_STR("StartTest"),NULL,MainMenu::StartTestChanged)
	{}
} MyInputsContainerSt;

extern MyInputsContainerSt MyInputs;





/* ***** SetupSerialUI: where we'll be setting up menus and such **** */
bool SetupSerialUI();


#define DIE_HORRIBLY(msg)	for(;;){ MySUI.println(msg); delay(1000); }


#endif
